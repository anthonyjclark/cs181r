---
title: "Robot Design"
---

```{=html}
<button style="margin-bottom: 1rem;" type="button" class="btn btn-primary" data-toggle="tooltip" title="Launch Hypothesis for this chapter" onclick="(function(){window.hypothesisConfig=function(){return{showHighlights:true,appType:'bookmarklet'};};var d=document,s=d.createElement('script');s.setAttribute('src','https://hypothes.is/embed.js');d.body.appendChild(s)})();">Launch Hypothesis</button>
```

Some introductory text.

## What you will learn

- A list of 2 to 5 learning goals

## Terminology

- A list of new terms

## Lecture

A video of slides, coding, hands-on electronics, etc.

Consider the following scenario:

> You must design a robot to race on a track with direction signs.

TODO: add image here? camera view and top-down
TODO: start with track? (easier for wall following) (maybe not needed if doing point A to B task instead of race track)

give task /environment and ask them to design on first day
diagnose others teams' issues
peer-review before batteries connected

Side request: new non-AI generated logo for the course

TODO: CAD design of wheel in Onshape (for 3d printing and laser cutting)
[Education Plan | Onshape Product Development Platform](https://www.onshape.com/en/education/)


## Interactive

An interactive widget (see [Kinematics](0-Kinematics.qmd) and [3D Demo](drafts/threedemo.qmd) for a work-in-progress examples).

## Exercise

assignment: pick a new sensor and design system around it

add something to robot -> what changes need be made? (power, comm., etc.)

- pololu, digikey, adafruit, dfrobot, robotshop, sparkfun
  unmanned vs uninhabited

## Wrap-Up

Some comments about the take-home message.











https://makeabilitylab.github.io/physcomp/electronics/

What additional information would you need?

- functional requirements
  - speed
  - how rugged
  - terrain (type of movement)
- design constraints
  - size
  - safety

- robot characteristics
  - mechanisms
  - electronics
  - programming
  - fabrication
- design considerations
  - environment
  - power
  - materials
  - senses
  - style

SBC vs microcontroller

[Systems Engineering Your Robotics Project | PickNik](https://picknik.ai/robotics/systems%20engineering/software%20system/moveit/trigger%20objective/network%20messages/json/rosbridge/roswebtools/python/rust/java/ports/factory%20controller/custom%20ui/ros/multi-robot/interoperability/fleet%20management/end-user/ui/python%20hardware/microserves/dds/tcpros/webapp/docker/ros2/2024/01/30/Systems-Engineering-Your-Robotics-Project.html)

strength
agility
stability

Keep a log on the condition of parts

Robots are a collection of subsystems that enable an application
Robot subsystems (not limited to)
- Mechatronics: sensors, batteries, computer
- Motion: motors, transimission, drives systems
- Structures: chassis, wheels, etc.
- Control: algorithms, software


oled
- battery info
- wifi info
- general status

deadman's switch

battery
- capacity (how much energy it holds)
- c-rating (how fast can it discharge---supply power---or charge)
- cell count

transmission
- belt, chain, direct

[Part Design Basics - YouTube](https://www.youtube.com/playlist?list=PL4FdDkwWXT9q0bWfy7sxuKQeughT9Fg_Q)


1. Define goals
2. Brainstorm designs
3. Sketch your layout
4. Prototype with simple materials
5. Model with CAD and fabricate
6. Refine

tools
- soldering iron
- helping hands
- wire cutters
- wire strippers
- flush cutters
- power supply
- driver and bits
- hot glue
- cardboard

PCB design

How to prioritize the requirements?

What components do you need?


- general concerns
  - cost
  - size
- motors (DC)
  - power
  - voltage
  - current
- wheel encoders sensors
  - logic level
  - communication
- motor control
  - peak and steady current
  - voltage input
  - voltage output
  - logic level
- power management
  - power levels
  - charging
- microcontroller
  - processor speed
  - processor word size
  - voltage
  - memory
  - power consumption
  - communication with peripherals (I2C, DIO, A2D etc.)
  - communication with host (USB, WiFi, etc.)
- battery
  - capacity
  - voltage
  - current
- sensors
  - communication
  - logic level
  - power level
  - current
  - accuracy
  - speed
  - resolution
- miscellaneous
  - switch
  - fuse
  - LEDs
  - buttons
  - screen
  - breadboard/protoboard

more general introduction
https://builtin.com/robotics

[How to check the battery voltage](https://wiki.seeedstudio.com/check_battery_voltage/)

breakout boards
arduino


## Example

[Thursday Day 4 - Mars Helicopter Presentation - YouTube](https://www.youtube.com/watch?app=desktop&v=mQu9m4MG5Gc)
- 500Hz guidance
- 30Hz vision-based navigation
- cell-phone grade ARM processor
- Cell-phone grade cameras
- Linux OS
- solar-powered battery charging
- 1-2 minute flights
- https://github.com/nasa/fprime



## Resources

- Circuit simulators
  - [Falstad CircuitJS](https://www.falstad.com/circuit/circuitjs.html)
  - [EveryCircuit](https://everycircuit.com/)
  - [CircuitLab](https://www.circuitlab.com/)
- Learning
  - [Intro to Electronics | Physical Computing](https://makeabilitylab.github.io/physcomp/electronics/)
