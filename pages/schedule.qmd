---
title: "Schedule"
---

<!-- 27 total in-class days -->

| Week | Date                 | Chapter                                                              |
| ---: | -------------------- | -------------------------------------------------------------------- |
| 1    | Tue Aug 27           | [Introduction and Design](../book/01-IntroductionAndDesign.qmd)      |
|      | Thu Aug 29           | [Layout and Prototyping](../book/02-LayoutAndPrototyping.qmd)        |
| 2    | Tue Sep 3            | [Safety and Electronics](../book/03-SafetyAndElectronics.qmd)        |
|      | Thu Sep 5            | [Programming with Toit](../book/04-ProgrammingWithToit.qmd)          |
| 3    | Tue Sep 10           | [Microcontroller Utilities](../book/05-MicrocontrollerUtilities.qmd) |
|      | Thu Sep 12           | [Open-Loop Go to Goal](../book/06-OpenLoopGoToGoal.qmd)              |
| 4    | Tue Sep 17           | Culture, Automation, and Jobs                                        |
|      | Thu Sep 19           | Wheel Encoders and Inertial Sensors                                  |
| 5    | Tue Sep 24           | Closed-Loop Go to Goal                                               |
|      | Thu Sep 26           | Kinematic Modeling                                                   |
| 6    | Tue Oct 1            |                                                                      |
|      | Thu Oct 3            |                                                                      |
| 7    | Tue Oct 8            |                                                                      |
|      | Thu Oct 10           |                                                                      |
| 8    | [Tue Oct 15]{.faded} | [Fall break]{.faded}                                                 |
|      | Thu Oct 17           |                                                                      |
| 9    | Tue Oct 22           |                                                                      |
|      | Thu Oct 24           |                                                                      |
| 10   | Tue Oct 29           |                                                                      |
|      | Thu Oct 31           |                                                                      |
| 11   | Tue Nov 5            |                                                                      |
|      | Thu Nov 7            |                                                                      |
| 12   | Tue Nov 12           |                                                                      |
|      | Thu Nov 14           |                                                                      |
| 13   | Tue Nov 19           |                                                                      |
|      | Thu Nov 21           |                                                                      |
| 14   | Tue Nov 26           | Project Workday                                                      |
|      | [Thu Nov 28]{.faded} | [Thanksgiving]{.faded}                                               |
| 15   | Tue Dec 3            | Project Workday                                                      |
|      | [Thu Dec 5]{.faded}  | [Reading day]{.faded}                                                |
| 16   | TBD                  | Final exam                                                           |

: {.striped .sm}

## Course Topics and Modules

Modules

1. Design and Electronics (1,2,3,4)
2. Modeling and Feedback Control (6,7,8,9,10,11)
3. Maps and Motion Planning (12,13,14)
4. Uncertainty (15,16)
5. Localization and Mapping (17,18,19)
6. Vision and Learning (20,21,22,23,24)
7. Societal Impacts (5,25)

|      | Chapter Topic                                | Interactive          | Exercise            |
| ---: | -------------------------------------------- | -------------------- | ------------------- |
| 1    | Introduction and Design                      | CAD with Onshape     | Prototyping         |
| 2    | Design, Assembly, and Electronics            | Wokwi Simulator?     | Circuits and Wiring |
| 3    | Arduino and Embedded Systems                 | Bluetooth LE         | Remote Control      |
| 4    | Open-Loop Go to Goal                         | Go to Goal           | Motor Control 1     |
| 5    | Culture, Automation, and Jobs                |                      | Discussions         |
| 6    | Kinematic Modeling                           | Kinematics           | Motor Control 2     |
| 7    | Sensors: Wheel Encoders, IMU, and LIDAR      | IMU Plotting         | Sensor Plotting     |
| 8    | Feedback Control                             | Proportional Control | Motor Control 3     |
| 9    | Sense-Plan-Act                               | Go to Goal           | Go to Goal          |
| 10   | Kinematic Trajectory Tracking                | Tracking             | Tracking            |
| 11   | Bug Algorithms and State Machines            | Bug0                 | Bug0/1/2            |
| 12   | Maps and Representations                     | Occupancy Grid       | Occupancy Grid      |
| 13   | Sampling and Graph Search                    | Graph Search         | D* Lite             |
| 14   | Global and Local Path Planning               | Dynamic              | Reactive Control    |
| 15   | Uncertainty and Error Propagation            | Uncertainty          | Senor Modeling      |
| 16   | State Estimation and Filters                 | Circle Drive         | Pose Estimation     |
| 17   | Localization                                 | Sensor Fusion        | Sensor Fusion       |
| 18   | Iterative Closest Point (ICP)                | ICP                  | ICP                 |
| 19   | Simultaneous Localization and Mapping (SLAM) | SLAM                 | SLAM                |
| 20   | Embedded Vision                              |                      | SenseCraft          |
| 21   | Feature Extraction and Optical Flow          | Optical Flow         | Optical Flow        |
| 22   | Object Detection and Segmentation            | Segmentation         | Segmentation        |
| 23   | ?Visual SLAM?                                |                      |                     |
| 24   | Imitation and Reinforcement Learning         |                      |                     |
| 25   | Moral Decision Making                        |                      |                     |
| 26   | Project Workday                              |                      |                     |
| 27   | Project Workday                              |                      |                     |

: {.striped .sm}

## Exercise Notes

Exercises (probably want 14?):

1. Open-loop go to goal
2. Remote control
3. Closed-loop go to goal with wheel encoders (Klancar Example 3.1)
   1. reference position through intermediate points
4. Go to goal and avoid obstacles
5. Autonomously explore a space with static obstacles
6. Autonomously navigate a course with dynamic obstacles
7. Chosen Project
8. Society discussion
compute kalman matrix values from sensor data least squares
derive equations (eg, Kalman filter, equations of motion)


Assignments
- tell a complete story
- assignment to go to home base from set starting location
- assignment to navigate map from unknown starting location
- use google sheet to aggregate data collection
- gradescope: ask for advice on making the assignment better

1. deadman's switch (stop when no signal; otherwise autonomous)
   1. Should start with simple blink using chrono (no delay) (or [AntiDelay](https://github.com/martinvichnal/AntiDelay/tree/main))
   2. http://sofapirate.github.io/Chrono/
   3. profile with perfetto and simple C++ class
     - [Perfetto UI](https://ui.perfetto.dev/)
     - [TimeProfiler](https://github.com/hideakitai/TimeProfiler)
     - [Profiler](https://github.com/ripred/Profiler)
     - [Profiling Arduino Code](https://www.dudley.nu/arduino_profiling/)
     - Sampling [Profiling Arduino Code](https://www.dudley.nu/arduino_profiling/)
     - [Profiling Arduino Code](https://forum.arduino.cc/t/profiling-arduino-code/977090/27)
   4. https://github.com/arduino/ArduinoCore-avr/blob/master/cores/arduino/main.cpp
   5. Does not work with delays
   6. [How to Avoid Using the Delay() Function in Arduino Sketches](https://www.digikey.com/en/maker/tutorials/2022/how-to-avoid-using-the-delay-function-in-arduino-sketches)
   7. robot might run away
2. dead-reckoning
    1. Land robot in target zone
    2. motor performance changes as battery drains (feedback control will help)
3. automatic emergency breaking
4. pid wall following

- bug or wall-following or artificial potential fields
  - https://www.cs.cmu.edu/~motionplanning/
  - https://www.cs.cmu.edu/~motionplanning/lecture/lecture.html

Assignment: include bug in Arduino code and have them fix it.

- [Class Responsibility Collaborator (CRC) Cards](http://agilemodeling.com/artifacts/crcModel.htm)

[Peer Evaluation - CATME](https://info.catme.org/features/peer-evaluation/)

loop (repetition)
1. encoders distance
2. add vision
3. implement lqr/mpc (https://github.com/f1tenth/f1tenth_lab9_template)


## Interactive Notes

TODO: repetition in topics (eg, control -> planning -> control)


Some inspirations:

- [Robotics and Autonomous Systems - MATLAB & Simulink](https://www.mathworks.com/help/overview/robotics-and-autonomous-systems.html?s_tid=hc_product_group_bc)
- [Mobile Robot Kinematics Equations - MATLAB & Simulink](https://www.mathworks.com/help/robotics/ug/mobile-robot-kinematics-equations.html)
- [Perform Path Planning Simulation with Mobile Robot - MATLAB & Simulink](https://www.mathworks.com/help/robotics/ug/perform-path-planning-simulation-with-mobile-robot.html)
- [Mapping - MATLAB & Simulink](https://www.mathworks.com/help/nav/mapping.html)
- [Motion Planning with MATLAB - MATLAB & Simulink](https://www.mathworks.com/campaigns/offers/next/getting-started-with-motion-planning-in-matlab-ebook.html)
- [Examples](https://www.mathworks.com/help/examples.html)
- [Robotics and Autonomous Systems — Examples](https://www.mathworks.com/help/overview/examples.html?category=robotics-and-autonomous-systems&s_tid=hc_panel)
- [Grid based search](https://atsushisakai.github.io/PythonRobotics/modules/path_planning/grid_base_search/grid_base_search.html)
- [Lidar to grid map](https://atsushisakai.github.io/PythonRobotics/modules/mapping/lidar_to_grid_map_tutorial/lidar_to_grid_map_tutorial.html)
- [terrybrash/dragon-space: Spatial partitioning concepts and implementations.](https://github.com/terrybrash/dragon-space)
- Control Architecture Scales (Correll 13.4)
- graph search like A* or D* Lite (https://www.cs.cmu.edu/~motionplanning/lecture/AppH-astar-dstar_howie.pdf)
- map/environment representation (https://www.mathworks.com/help/robotics/ug/perform-path-planning-simulation-with-mobile-robot.html)

Other thoughts

- gaussian equation widget (adjust values and show the graph)
- Maximum Likelihood, Least Squares Estimation, Maximum A Posteriori Estimation
- Least Squares and KKT conditions
- Dual problems: control and estimation
- Least squares as a special case of maximum likelihood estimation on Gaussian models.
- estimation before localization
- if covering linearization, then look at boyds lecture on nonlinear least squares
- boyd lectures have good info on nonlinear control (e.g., directing a nonholonomic robot)
- cirlces and lines path planning (modern robotics)
- Klančar examples (e.g., Kalman)
- Boyd LQR notes
- only teach dynamics when needed; kinematics probably good enough
- reactive, FSMs, hierarchical FSMs, behavior trees, mission planning
- qaudrature encoders


## Concept Inventory

Here is the inventory of topics I considered when developing this course.

|   | Category    | Concepts                                                                                |
| - | ----------- | --------------------------------------------------------------------------------------- |
| 1 | Design      | Requirements, Materials, CAD, Fabrication, Mechatronics, Electronics, Safety            |
| 2 | Programming | Embedded Systems, Communication, Real-Time, Debugging, Security, IoT, DSP,              |
| 3 | Math        | Linear Algebra, Calculus, Probability, Statistics, Discretization, Optimization         |
| 4 | Modeling    | Diagramming, Numerics, Linearization, Kinematics, Dynamics, Simulation, Motion Capture  |
| 5 | Control     | Feedback, Motion, Robustness, Adaptivity, Reactive, Behavioral                          |
| 6 | Planning    | Search, Mapping, Motion, Trajectory                                                     |
| 7 | Vision      | Conventional, Learning, Optical Flow                                                    |
| 8 | Uncertainty | Estimation, Localization, Fuzzy Logic, Filtering, Identification, SLAM                  |
| 9 | Society     | History, Laws, Ethics, Morals, Jobs, Pop-Culture, HRI                                   |

## Mind Map of Mobile Robotics

<iframe width="100%" height="400px" style="border: 1px solid black;" src="../_static/markmap.html" frameborder="0"></iframe>


<!--
[Try markmap](https://markmap.js.org/repl)
> Download as interactive HTML

---
title: Mobile Robotics
markmap:
  colorFreezeLevel: 2
---

- Society
  - History
  - Pop-culture (eg, movies, books, games)
  - Automation and Jobs
  - Ethics and Moral Decision Making
  - Law and Liability
- Design
  - Requirements Engineering
  - Computer Aided Design (CAD) (eg, Onshape)
  - Fabrication (eg, 3D Printing, Laser Cutting, Casting)
  - Electronics (eg, Soldering, Circuits)
  - Safety (eg, Design, Emergency Braking, Active Enable)
  - Embedded Systems (eg, Arduino, I2C, BLE, Debugging)
- Mathematics and Numerics
  - Vectors, Spaces, and Linear Algebra
  - Least Squares
  - Probability
  - Statistics
  - Optimization
  - Discretization
  - Linearization
- Modeling
  - Kinematics
  - Dynamics
  - State-Space
  - Simulation
  - Motion Capture
- Control
  - Open-loop Control
  - Feedback Control (eg, PID)
  - LQR and iLQR
  - MPC and MPPI
  - Control Theory
  - Bug Algorithms
  - State Machines
  - Sense-Plan-Act
  - Pure Pursuit
  - Hybrid and Hierarchical Control
  - Behavior Trees
- Localization
  - Uncertainty
  - Error Propagation
  - Bayes Theorem
  - State Estimation
  - Sensor Fusion
  - Histogram Filters
  - Kalman Filters (eg, KF, EKF, UKF)
  - Particle Filters
- Mapping
  - Representation (eg, Occupancy Grid)
  - Cell Decomposition (eg, quadtree)
  - Roadmaps (eg, Voronoi)
  - Potential Fields
  - Point Clouds
  - Clustering
  - Iterative Closest Point (ICP)
  - SLAM (eg, Graph-based, EKF, FastSLAM)
- Planning
  - Global and Local
  - Configuration Space
  - Constraints
  - Dynamic Window Approach
  - Trajectory Tracking (eg, Pure Pursuit, MPC, iLQR)
  - Probabilistic Roadmaps (PRM)
  - Graph Search (eg, BFS, DFS, A*, D* Lite)
  - Sampling-Based (eg, RRT)
  - Motion Planning
  - Trajectory Planning/Tracking
  - Path Planning
- Vision
  - Feature Extraction
  - Optical Flow
  - Object Detection
  - Segmentation
  - Learning (eg, ML, RL, Policy Search)

-->
